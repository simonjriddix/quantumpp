language: cpp
dist: focal
os: linux

jobs:
  include:
    # Ubuntu Linux Focal Fosa 20.04, gcc-9.3
    - os: linux
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++ && CC=gcc"

    # Ubuntu Linux Focal Fosa 20.04, clang-7.0
    - os: linux
      compiler: clang
      before_install:
        - export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH
      env:
        - MATRIX_EVAL="CXX=clang++ && CC=clang"

    # macOS Catalina 10.15, AppleClang version 12.0.0 (clang-1200.0.32.2)
    - os: osx
      osx_image: xcode12
      compiler: clang
      env:
        - MATRIX_EVAL="CXX=clang++ && CC=clang"

    # macOS Catalina 10.15, gcc-10.2
    - os: osx
      osx_image: xcode12
      compiler: gcc
      env:
        - MATRIX_EVAL="CXX=g++-10 && CC=gcc-10"

notifications:
  email: false

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - $CXX --version

  # Install Eigen3
  - wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip -O eigen3.zip && unzip -q eigen3.zip && mv eigen-3.3.7 $HOME/eigen

  # Install the library
  - cd $TRAVIS_BUILD_DIR && mkdir build && cd build && cmake .. -DEIGEN3_INSTALL_DIR=$HOME/eigen -DCMAKE_BUILD_TYPE=Debug && sudo make install

  # Compile and run a standalone example
  - cd $TRAVIS_BUILD_DIR/examples/standalone && mkdir build && cd build && cmake .. -DEIGEN3_INSTALL_DIR=$HOME/eigen -DCMAKE_BUILD_TYPE=Debug && make -j4 && ./standalone

  # Build the examples and the unit tests
  - cd $TRAVIS_BUILD_DIR/build
  - make -j4 examples
  - make -j4 unit_tests

  # Run the unit tests
  - make test ARGS='-E qpp_Timer'
